buildscript {
    ext.kotlin_version = '1.9.21'

    ext.agp_version = '8.4.0'

    ext.smartLocationVersion = "3.3.3"
    ext.robolectricVersion = "4.4"
    ext.mockitoVersion = "2.23.4"
    ext.junitVersion = "4.12"

    repositories {
        google()
        mavenCentral()
        maven {
            url 'https://storage.googleapis.com/r8-releases/raw'
        }
        mavenLocal()
        mavenCentral {
            content {
                includeVersion 'org.jetbrains.trove4j', 'trove4j', '20160824'
                includeGroupByRegex "com\\.archinamon.*"
            }
        }
        maven {
            url "https://plugins.gradle.org/m2/"
            content {
                includeGroupByRegex "org\\.jlleitschuh\\.gradle.*"
            }
        }

        maven {
            url 'https://maven.fabric.io/public'//AA+ crashanalytics
        }
    }
    dependencies {
//        classpath 'com.android.tools:r8:3.0.73'
        classpath("com.android.tools.build:gradle:8.7.2") //AGP
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.5.3'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.2.1"
        classpath 'app.cash.exhaustive:exhaustive-gradle:0.1.1'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.1'//AA+
        classpath 'com.google.gms:google-services:4.3.13' //AA see comment at the bottom about FCM in app/build.gradle
    }
}

ext {
    BUILD_TOOL_VERSION = '34.0.0'

    COMPILE_SDK = 35
    TARGET_SDK  = 35
    MINIMUM_SDK = 28

    JAVA_VERSION = JavaVersion.VERSION_17

    LIBSIGNAL_CLIENT_VERSION = '0.15.0'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
   /* ext.lib_signal_service_version_number   = "2.15.3"
    ext.lib_signal_service_group_info       = "org.whispersystems"
    ext.lib_signal_client_version           = "0.1.0"*/

    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }

    if (project.name != "Signal-Android" && project.name != "libsignal-service" && project.name != "lintchecks" && !project.name.endsWith("-app")) {
        task qa {
            group 'Verification'
            description 'Quality Assurance. Run before pushing'
            dependsOn 'clean', 'testReleaseUnitTest', 'lintRelease'
        }
    }
}

task qa {
    group 'Verification'
    description 'Quality Assurance. Run before pushing.'
    dependsOn 'clean',
            ':Signal-Android:testPlayProdReleaseUnitTest',
            ':Signal-Android:lintPlayProdRelease',
            'Signal-Android:ktlintCheck',
            ':libsignal-service:test',
            ':Signal-Android:assemblePlayProdRelease'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}