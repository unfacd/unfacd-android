import org.signal.signing.ApkSignerUtil
import java.security.MessageDigest

buildscript {
    repositories {
        google()

        maven {
            url "https://repo1.maven.org/maven2"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath 'com.google.gms:google-services:4.0.2' // see comment at the bottom about FCM
        classpath files('libs/gradle-witness.jar', 'libs/buildSrc.jar')
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6' //
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

repositories {
    maven {
        url "https://raw.github.com/signalapp/maven/master/photoview/releases/"
        content {
            includeGroupByRegex "com\\.github\\.chrisbanes.*"
        }
    }
    maven {
        url "https://raw.github.com/signalapp/maven/master/shortcutbadger/releases/"
        content {
            includeGroupByRegex "me\\.leolin.*"
        }
    }
    maven {
        url "https://raw.github.com/signalapp/maven/master/circular-progress-button/releases/"
        content {
            includeGroupByRegex "com\\.github\\.dmytrodanylyk\\.circular-progress-button\\.*"
        }
    }
    maven {
        url "https://raw.github.com/signalapp/maven/master/sqlcipher/release/"
        content {
            includeGroupByRegex "org\\.signal.*"
        }
    }
    maven { // textdrawable
        url 'https://dl.bintray.com/amulyakhare/maven'
        content {
            includeGroupByRegex "com\\.amulyakhare.*"
        }
    }
    google()
    jcenter()
    mavenLocal()
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

dependencies {
    def libSignalVersion = '0.0.3'

    //as per ext.signal_version in signal protocol lib package
    implementation 'androidx.appcompat:appcompat:1.1.0-beta01'
     implementation 'androidx.recyclerview:recyclerview:1.0.0'
     implementation 'com.google.android.material:material:1.0.0'
     implementation 'androidx.legacy:legacy-support-v13:1.0.0'
     implementation 'androidx.cardview:cardview:1.0.0'
     implementation 'androidx.preference:preference:1.0.0'
     implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
     implementation 'androidx.gridlayout:gridlayout:1.0.0'
     implementation 'androidx.exifinterface:exifinterface:1.0.0'
     implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
     implementation 'androidx.multidex:multidex:2.0.1'
     implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
     implementation 'androidx.lifecycle:lifecycle-common-java8:2.0.0'
     implementation "androidx.camera:camera-core:1.0.0-alpha02"
     implementation "androidx.camera:camera-camera2:1.0.0-alpha02"
     implementation('com.google.firebase:firebase-messaging:17.3.4') {
         implementation 'com.google.firebase:firebase-core:16.0.6' exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
     }
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.9.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.9.1'
    implementation 'org.conscrypt:conscrypt-android:2.0.0'

    implementation 'org.signal:aesgcmprovider:0.0.3'
    implementation 'org.whispersystems:webrtc-android:M75'
    //     implementation "org.signal:signal-metadata-java:${libSignalVersion}"
    implementation ("org.signal:signal-metadata-android:${libSignalVersion}") {
        exclude group: 'org.signal', module: 'signal-metadata-java'
    }

    implementation 'me.leolin:ShortcutBadger:1.1.16'
    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    implementation 'com.jpardogo.materialtabstrip:library:1.0.9'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    annotationProcessor 'androidx.annotation:annotation:1.1.0'
    implementation 'com.makeramen:roundedimageview:2.1.0'
    implementation 'com.pnikosis:materialish-progress:1.5'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'pl.tajchert:waitingdots:0.1.0'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    implementation 'com.melnykov:floatingactionbutton:1.3.0'
    implementation 'com.google.zxing:android-integration:3.1.0'
    implementation 'mobi.upod:time-duration-picker:1.1.3'
    implementation 'org.threeten:threetenbp:1.3.6'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.google.protobuf:protobuf-java:2.5.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.10.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'

    //
    implementation 'com.google.zxing:core:3.2.1'
    implementation('com.davemorrissey.labs:subsampling-scale-image-view:3.6.0') {
       exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation('cn.carbswang.android:NumberPickerView:1.0.9') {
       exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation('com.tomergoldst.android:tooltips:1.0.6') {
       exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation('com.klinkerapps:android-smsmms:4.0.1') {
       exclude group: 'com.squareup.okhttp', module: 'okhttp'
       exclude group: 'com.squareup.okhttp', module: 'okhttp-urlconnection'
    }
    implementation 'com.annimon:stream:1.1.8'
    implementation('com.takisoft.fix:colorpicker:0.9.1') {
       exclude group: 'com.android.support', module: 'appcompat-v7'
       exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    implementation 'com.codewaves.stickyheadergrid:stickyheadergrid:0.9.4'
    implementation 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3-S2'
    implementation 'org.signal:android-database-sqlcipher:3.5.9-S3'
    implementation('com.googlecode.ez-vcard:ez-vcard:0.9.11') {
       exclude group: 'com.fasterxml.jackson.core'
       exclude group: 'org.freemarker'
    }

    //
     implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'
     implementation 'com.mahc.custombottomsheetbehavior:googlemaps-like:0.9.2'
     implementation('com.amitshekhar.android:debug-db:1.0.6') {
        exclude module: 'android-database-sqlcipher'
     }
    implementation 'io.nlopez.smartlocation:library:3.3.3'
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.flaviofaria:kenburnsview:1.0.7'
    implementation 'com.github.florent37:diagonallayout:1.0.3'
    implementation 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    implementation 'com.ogaclejapan.smarttablayout:utils-v4:1.6.1@aar'
    implementation 'com.mikepenz:actionitembadge:3.3.1@aar'
    implementation 'com.mikepenz:iconics-core:2.8.1@aar'
    implementation 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar'
    implementation 'com.mikepenz:community-material-typeface:2.0.46.1@aar'
    implementation 'com.bartoszlipinski:viewpropertyobjectanimator:1.4.5'


    implementation 'com.kyleduo.switchbutton:library:1.4.6'     //floatingsearchview
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.1'
    implementation 'com.google.guava:guava:20.0'
    implementation 'com.shawnlin:number-picker:2.4.3'

    implementation 'com.kongzue.dialog_v3:dialog:3.0.3'

    implementation 'com.github.rvesse:airline:2.7.0'

    //see cn.carbswang.android:NumberPickerView:1.0.9' above
    implementation files('libs/compress-lzf-1.0.4.jar')

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.11.1'

    //    testImplementation 'org.mockito:mockito-core:1.9.5'

    //    testImplementation 'org.powermock:powermock-api-mockito:1.6.1'

    //    testImplementation 'org.powermock:powermock-module-junit4:1.6.1'

    //    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.1'

    //    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.1'
    testImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.multidex:multidex:2.0.1'
    androidTestImplementation 'androidx.multidex:multidex-instrumentation:2.0.0'

    //    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'

    //    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    //    androidTestImplementation('org.assertj:assertj-core:1.7.1') {

    //        exclude group: 'org.hamcrest', module: 'hamcrest-core'

    //    }

    //    androidTestImplementation('com.squareup.assertj:assertj-android:1.0.0') {

    //        exclude group: 'org.hamcrest', module: 'hamcrest-core'

    //        exclude group: 'com.android.support', module: 'support-annotations'

    //    }
}

def canonicalVersionCode = 44
def canonicalVersionName = "1.1.0"

def postFixSize = 10
def abiPostFix = ['armeabi-v7a' : 1,
                  'arm64-v8a'   : 2,
                  'x86'         : 3,
                  'x86_64'      : 4,
                  'universal'   : 5]

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'

    flavorDimensions "none"

    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        versionCode canonicalVersionCode * postFixSize
        versionName canonicalVersionName

        minSdkVersion 19
        targetSdkVersion 28
        multiDexEnabled true

        resConfigs "en", "ar", "hu"

        vectorDrawables.useSupportLibrary = true

        project.ext.set("archivesBaseName", "unfacd")

        applicationId "com.unfacd.android"

        //related to com.kongzue.dialog_v3
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true

        buildConfigField "long", "BUILD_TIMESTAMP", getLastCommitTimestamp() + "L"
        buildConfigField "String", "SIGNAL_CONTACT_DISCOVERY_URL", "\"https://api.unfacd.io\""
        buildConfigField "String", "SIGNAL_SERVICE_STATUS_URL", "\"uptime.unfacd.io\""
        buildConfigField "String", "GIPHY_PROXY_HOST", "\"api.giphy.com\""
        buildConfigField "int", "CONTENT_PROXY_PORT", "443"
        buildConfigField "String", "USER_AGENT", "\"unfacd-android\""

        buildConfigField "boolean", "DEV_BUILD", "false"
        buildConfigField "String", "MRENCLAVE", "\"cd6cfc342937b23b1bdd3bbf9721aa5615ac9ff50a75c5527d441cd3276826c9\""
        buildConfigField "String", "UNIDENTIFIED_SENDER_TRUST_ROOT",   "\"BS9bPCdp+kPOyIarlVY9+kJLopys2Xz9uu8eo+YYlLwn\""
        buildConfigField "String[]", "LANGUAGES", "new String[]{\"" + autoResConfig().collect { s -> s.replace('-r', '_') }.join('", "') + '"}'
        buildConfigField "int", "CANONICAL_VERSION_CODE", "$canonicalVersionCode"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        resConfigs autoResConfig()

        splits {
            abi {
                enable true
                reset()
                include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                universalApk true
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude  'org/apache/http/annotation/NotThreadSafe.class'
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-firebase-messaging.pro',
                    'proguard-google-play-services.pro',
                    'proguard-dagger.pro',
                    'proguard-jackson.pro',
                    'proguard-sqlite.pro',
                    'proguard-appcompat-v7.pro',
                    'proguard-square-okhttp.pro',
                    'proguard-square-okio.pro',
                    'proguard-spongycastle.pro',
                    'proguard-rounded-image-view.pro',
                    'proguard-glide.pro',
                    'proguard-shortcutbadger.pro',
                    'proguard-retrofit.pro',
                    'proguard-webrtc.pro',
                    'proguard-klinker.pro',
                    'proguard-retrolambda.pro',
                    'proguard-smartlocation.pro',//
                    'proguard-okhttp.pro',
                    'proguard-ez-vcard.pro',
                    'proguard-workmanager.pro',
                    'proguard-google-common.pro',//
                    'proguard-lzf.pro',//
                    'proguard.cfg'
            testProguardFiles 'proguard-automation.pro', 'proguard.cfg'
//            signingConfig signingConfigs.release//signingConfigs.dev
            applicationIdSuffix ".debug" //
            buildConfigField "boolean", "DEV_BUILD", "true"
            buildConfigField "String", "UFSRV_URL", "\"wss://ufsrv.unfacd.io\""
            buildConfigField "String", "UFSRVAPI_URL", "\"https://api.unfacd.io\""
            buildConfigField "String", "UFSRVMEDIA_URL", "\"https://media.unfacd.io\""
            manifestPlaceholders.appName = "unfacd"
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            buildConfigField "boolean", "RELEASE_BUILD", "true"
            buildConfigField "boolean", "DEV_BUILD", "false" //remove for prod
            proguardFiles = buildTypes.debug.proguardFiles
            signingConfig signingConfigs.release
            buildConfigField "String", "UFSRV_URL", "\"wss://ufsrv.unfacd.io\""
            buildConfigField "String", "UFSRVAPI_URL", "\"https://api.unfacd.io\""
            buildConfigField "String", "UFSRVMEDIA_URL", "\"https://media.unfacd.io\""
            manifestPlaceholders.appName = "unfacd"
        }
    }

    productFlavors {
        play {
            dimension "none"
            ext.websiteUpdateUrl = "null"
            buildConfigField "boolean", "PLAY_STORE_DISABLED", "false"
            buildConfigField "String", "NOPLAY_UPDATE_URL", "$ext.websiteUpdateUrl"
            manifestPlaceholders.appNameSuffix = ""
        }

//        website {
//            dimension "none"
//            ext.websiteUpdateUrl = "https://updates.unfacd.io/android"
//            buildConfigField "boolean", "PLAY_STORE_DISABLED", "true"
//            buildConfigField "String", "NOPLAY_UPDATE_URL", "\"$ext.websiteUpdateUrl\""
//            manifestPlaceholders.appNameSuffix = "-w"
//        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFileName = output.outputFileName.replace(".apk", "-${variant.versionName}.apk")
            def abiName = output.getFilter("ABI") ?: 'universal'
            def postFix = abiPostFix.get(abiName, 0)

            if (postFix >= postFixSize) throw new AssertionError("postFix is too large")

            output.versionCodeOverride = canonicalVersionCode * postFixSize + postFix
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        androidTest {
            java.srcDirs = ['test/androidTest/java']
        }
        test {
            java.srcDirs = ['test/unitTest/java']
            resources.srcDirs = ['test/unitTest/resources']
        }

//        website.manifest.srcFile 'website/AndroidManifest.xml'
    }

    lintOptions {
        abortOnError false
        baseline file("lint-baseline.xml")//http://tools.android.com/tech-docs/lint-in-studio-2-3
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

def assembleWebsiteDescriptor = { variant, file ->
    if (file.exists()) {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        file.eachByte 4096, {bytes, size ->
            md.update(bytes, 0, size);
        }

        String digest  = md.digest().collect {String.format "%02x", it}.join();
        String url     = variant.productFlavors.get(0).ext.websiteUpdateUrl
        String apkName = file.getName()

        String descriptor = "{" +
                "\"versionCode\" : $canonicalVersionCode," +
                "\"versionName\" : \"$canonicalVersionName\"," +
                "\"sha256sum\" : \"$digest\"," +
                "\"url\" : \"$url/$apkName\"" +
                "}"

        File descriptorFile = new File(file.getParent(), apkName.replace(".apk", ".json"))

        descriptorFile.write(descriptor)
    }
}

def signProductionRelease = { variant ->
    variant.outputs.collect { output ->
        String apkName    = output.outputFile.name
        File   inputFile  = new File(output.outputFile.path)
        File   outputFile = new File(output.outputFile.parent, apkName.replace('-unsigned', ''))

        new ApkSignerUtil('sun.security.pkcs11.SunPKCS11',
                'pkcs11.config',
                'PKCS11',
                'file:pkcs11.password').calculateSignature(inputFile.getAbsolutePath(),
                outputFile.getAbsolutePath())

        inputFile.delete()
        outputFile
    }
}

task signProductionPlayRelease {
    doLast {
        signProductionRelease(android.applicationVariants.find { (it.name == 'playRelease') })
    }
}

task signProductionWebsiteRelease {
    doLast {
        def  variant       = android.applicationVariants.find { (it.name == 'websiteRelease') }
        File signedRelease = signProductionRelease(variant).find { it.name.contains('universal') }
        assembleWebsiteDescriptor(variant, signedRelease)
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.equals("assembleWebsiteDebug") ||
            task.name.equals("assembleWebsiteRelease"))
    {
             task.finalizedBy assembleWebsiteDescriptor
    }
}

def getLastCommitTimestamp() {
    def folder = new File( '.git' )
    def gitTest = exec {
        def command = "git --version"
        ignoreExitValue = true
        executable "bash" args "-l", "-c", command
    }
    if (gitTest.getExitValue()==0 && folder.exists()) {
        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                executable = 'git'
                args = ['log', '-1', '--pretty=format:%ct']
                standardOutput = os
            }

            return os.toString() + "000"
        }
    } else {
        Date today = new Date()
        return today.getTime().toString()
    }
}

/**
 * Discovers supported languages listed as under the res/values- directory.
 */
static def autoResConfig() {
    def files = new ArrayList<String>()
    def root = new File('res')
    root.eachFile { f -> files.add(f.name) }
    ['en'] + files.collect { f -> f =~ /^values-([a-z]{2}(-r[A-Z]{2})?)$/ }
            .findAll { matcher -> matcher.find() }
            .collect { matcher -> matcher.group(1) }
            .sort()
}

task qa {
    group 'Verification'
    description 'Quality Assurance. Run before pushing.'
//    dependsOn ':testPlayReleaseUnitTest', ':assemblePlayDebug'
    dependsOn ':testPlayReleaseUnitTest', ':lintPlayRelease', ':assemblePlayDebug'
}

def Properties props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

//https://medium.com/@samstern_58566/how-to-use-firebase-on-android-without-the-google-services-plugin-93ecc7dc6c4.
//https://github.com/signalapp/Signal-Android/commit/a6564f8f8458fa256e4b68fef65210ee0c30d518 removed the plugin
apply plugin: 'com.google.gms.google-services'